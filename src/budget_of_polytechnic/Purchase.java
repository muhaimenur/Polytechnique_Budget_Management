/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package budget_of_polytechnic;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Muhaimenur
 */
public class Purchase extends javax.swing.JFrame {
public ResultSet rs;
   public Statement st;
   public Connection con;
    private PreparedStatement pst;
    private String sql;
    String s="";
    String n=null;
    int code, Total_budget, main_budget, remaining_budget,budget_value,exp_value, select_code, select_table_total, budget_num,ID;
    String table_Click, table_Click1, table_Click2, table_Click3, table_Click4,table_Click5;
    /**
     * Creates new form Purchase
     */
    public Purchase() {
        initComponents();
        setLocationRelativeTo(null);
        this.setResizable(false);
        Connection();
        remaining_budget();
    }
public void Connection()
        {
            try{
                Class.forName("com.mysql.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/budget_of_polytechnic","root","");
                
                st = con.createStatement();
                
               }
       catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
        }

public void remaining_budget()
{
    try{
            
           //String sql2 = "select sum(Total) from expenditure_table";
           String sql3 = "select sum(BUDGET) from budgettable";
           /*rs = st.executeQuery(sql2);
            if(rs.next())
            {
                String sum = rs.getString("sum(Total)");
                exp_value = Integer.parseInt(String.valueOf(sum));
            }*/
            
            rs = st.executeQuery(sql3);
            if(rs.next())
            {
                String sum = rs.getString("sum(BUDGET)");
                remain.setText(String.valueOf(sum));
            }

            //System.out.println(" "+ budget_value+ "  "+ exp_value+ "remain: "+remaining_budget);
            
    }
    catch (Exception e) 
           {
           JOptionPane.showMessageDialog(rootPane, "Database Error");
           }

}
public void empty()
{
    int itemCount = procurement_combo.getItemCount();

    for(int i=0;i<itemCount;i++){
        procurement_combo.removeItemAt(0);
     }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Purchase_Date = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        Procurement_method_combo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        Group_combo = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        procurement_combo = new javax.swing.JComboBox();
        Description = new javax.swing.JTextField();
        Bill = new javax.swing.JTextField();
        Vat = new javax.swing.JTextField();
        IT = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        first_date = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        Second_date = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        using_combobox = new javax.swing.JComboBox();
        Search = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ShowTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        Total_bill = new javax.swing.JLabel();
        Total_vat = new javax.swing.JLabel();
        Total_it = new javax.swing.JLabel();
        Total_purchase = new javax.swing.JLabel();
        remain = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        Purchase = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        non_govt_pur = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Govt. Purchase");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Government Purchase Item");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("DATE");

        Purchase_Date.setDateFormatString("yyyy-MM-dd");
        Purchase_Date.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Procurement Method");

        Procurement_method_combo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Procurement_method_combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DP", "RFQ", "OTM", "Others" }));
        Procurement_method_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Procurement_method_comboActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Group (Khat)");

        Group_combo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Group_combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash wage & salary", "Administrative expenditure", "Fee charge and commission", "Training", "Petrol oil and lubricant", "Travel and transfer", "Printing and monihari", "General supplies and raw materials", "Professional service honor and spacial expenditure", "Repair and store", "Recuring transfer that are not classified elsewhere", "Equipments and tools" }));
        Group_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Group_comboActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Sub Group (Upo-Khat)");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Description");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Bill");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("VAT");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("IT");

        procurement_combo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        Description.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        Bill.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        Vat.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        IT.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setText("%");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setText("%");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(Purchase_Date, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(121, 121, 121)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(Procurement_method_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(Group_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(procurement_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Description, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(Bill, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(Vat, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(IT, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Procurement_method_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3))
                            .addComponent(Purchase_Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Vat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel19))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(IT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel20))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(procurement_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Description, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Bill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Group_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Purchase Details");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Date Range");

        first_date.setDateFormatString("yyyy-MM-dd");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("TO");

        Second_date.setDateFormatString("yyyy-MM-dd");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("Using");

        using_combobox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        using_combobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DP", "RFQ", "OTM", "Others" }));
        using_combobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                using_comboboxActionPerformed(evt);
            }
        });

        Search.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(294, 294, 294)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(first_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(using_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(Second_date, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(501, 501, 501)
                        .addComponent(Search))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(470, 470, 470)
                        .addComponent(jLabel10)))
                .addContainerGap(453, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(first_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(Second_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(using_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Search)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        ShowTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ShowTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Codes", "Procurement packages", "Procurement_Methods", "Descriptions", "Date", "Bill", "VAT", "IT", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ShowTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ShowTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ShowTable);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("Total Bill");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("Total Vat");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("Total IT");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("Total Purchase");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("Remaining Budget");

        Total_bill.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        Total_vat.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        Total_it.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        Total_purchase.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        remain.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel17)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(57, 57, 57)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel16)
                                .addComponent(jLabel15)
                                .addComponent(jLabel14)))
                        .addComponent(jLabel18)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Total_bill, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Total_vat)
                    .addComponent(Total_it)
                    .addComponent(Total_purchase)
                    .addComponent(remain))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(Total_bill))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(Total_vat))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(Total_it))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(Total_purchase))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(remain))
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(204, 255, 204));

        Purchase.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Purchase.setText("Purchase");
        Purchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PurchaseActionPerformed(evt);
            }
        });

        Update.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        Delete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        logout.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        logout.setText("Log Out");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        non_govt_pur.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        non_govt_pur.setText("Non Govt. Purchase");
        non_govt_pur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                non_govt_purActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(non_govt_pur, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(logout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Purchase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Purchase)
                .addGap(18, 18, 18)
                .addComponent(Update)
                .addGap(18, 18, 18)
                .addComponent(Delete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(non_govt_pur)
                .addGap(18, 18, 18)
                .addComponent(logout)
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1228, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap()))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Procurement_method_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Procurement_method_comboActionPerformed
        String s = Procurement_method_combo.getSelectedItem().toString();
        System.out.println(s);
    }//GEN-LAST:event_Procurement_method_comboActionPerformed

    private void Group_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Group_comboActionPerformed
        procurement_combo.removeAllItems();
        String s = Group_combo.getSelectedItem().toString();
        String s2 = Procurement_method_combo.getSelectedItem().toString();
       
        try
        {
            String sql = "select * from budgettable where Groups='" + s + "' AND Procurement_method='" + s2 + "' ";
            rs = st.executeQuery(sql);
            while (rs.next()) {
                String pat = rs.getString("PROCUREMENT_PACKAGE");
                procurement_combo.addItem(pat.trim());
            }
           
        
        }
        catch (Exception e) 
           {
                JOptionPane.showMessageDialog(rootPane, "Database Error");
           }
        
        
        /*if(temp==1)
        {
            empty();
        }
        
        if(s == "Cash wage & salary")
        {
            
            procurement_combo.addItem("Office salary");
            procurement_combo.addItem("Employee salary");
            procurement_combo.addItem("Responsibility duty allowance");
            procurement_combo.addItem("Transportation allowance");
            procurement_combo.addItem("Educational allowance");
            procurement_combo.addItem("Hill allowance");
            procurement_combo.addItem("House rent allowance");
            procurement_combo.addItem("Medical allowance");
            procurement_combo.addItem("Tiffin allowance");
            procurement_combo.addItem("Bleaching allowance");
            procurement_combo.addItem("Festival allowance");
            procurement_combo.addItem("Overtime allowance");
            procurement_combo.addItem("Wax entertainment allowance");
            procurement_combo.addItem("Honorarium");
            procurement_combo.addItem("Bengali new year allowance");
            procurement_combo.addItem("Other allowance");
           temp=1;
            
            
        }
        else if(s == "Administrative expenditure") 
        {
            procurement_combo.addItem("Clear appetite");
            procurement_combo.addItem("Reception expenditure");
            procurement_combo.addItem("Hiring charge");
            procurement_combo.addItem("The cost of the law");
            procurement_combo.addItem("Electricity");
            procurement_combo.addItem("Water");
            procurement_combo.addItem("Internet/Fax/Telex");
            procurement_combo.addItem("Postal");
            procurement_combo.addItem("Telephone");
            procurement_combo.addItem("Promotion and advertising expences");
            procurement_combo.addItem("Books and magazine");
            temp=1;
            
        }
        else if(s == "Fee charge and commission") 
        {
           procurement_combo.addItem("Registration fee");
           temp=1;
        }
        else if(s == "Training") 
        {
           procurement_combo.addItem("Training");
          temp=1;
        }
        else if(s == "Petrol oil and lubricant") 
        {
           procurement_combo.addItem("petrol oil and lubricant");
           procurement_combo.addItem("Gas and fuel");
         temp=1;
        }
        else if(s == "Travel and transfer") 
        {
           procurement_combo.addItem("Travel expense");
        temp=1;
        }
        else if(s == "Printing and monihari") 
        {
           procurement_combo.addItem("Computer accessories");
            procurement_combo.addItem("Other monihari");
           temp=1;
        }
        else if(s == "General supplies and raw materials") 
        {
           procurement_combo.addItem("Chemicals");
            procurement_combo.addItem("raw materials and spare parts");
            procurement_combo.addItem("Clothing");
            procurement_combo.addItem("Sports accessories");
            temp=1;
        }
        else if(s == "Professional service honor and spacial expenditure") 
        {
           procurement_combo.addItem("Honorariam without govt. employee");
            procurement_combo.addItem("Festival");
            temp=1;
        }
        else if(s == "Repair and store") 
        {
           procurement_combo.addItem("Motor vehicles");
            procurement_combo.addItem("Furniture");
            procurement_combo.addItem("Computer");
            procurement_combo.addItem("Office equipment");
            procurement_combo.addItem("Other parts and equipments");
            procurement_combo.addItem("Other building and structure");
            procurement_combo.addItem("Health provision and water supply");
            procurement_combo.addItem("Electrical installation");
            procurement_combo.addItem("Fitting and fixing");
            temp=1;
        }
        else if(s == "Recuring transfer that are not classified elsewhere") 
        {
            procurement_combo.addItem("Land development tax");
            procurement_combo.addItem("Municipality");
            procurement_combo.addItem("Scholarship");
            temp=1;
        }
        else if(s == "Equipments and tools") 
        {
            procurement_combo.addItem("Computer and accessories");
            procurement_combo.addItem("Engineering and other equipment");
            procurement_combo.addItem("Office equipment");
            procurement_combo.addItem("Educational and teaching equipments");
            procurement_combo.addItem("Furniture");
            temp=1;
        }
  */
    }//GEN-LAST:event_Group_comboActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
            int r = JOptionPane.showConfirmDialog(null, "Do you really want to delete", "Delete", JOptionPane.YES_NO_OPTION);
        if (r == 0) {
            try {
                String sql2 = "select budget from budgettable Where CODE='" + select_code + "'";
                 rs = st.executeQuery(sql2);
                if(rs.next())
                {
                    String num = rs.getString("BUDGET");
                    budget_num =Integer.parseInt(num);
                }
                
                String sql = "delete from expenditure_table Where id='" + ID + "'";
                pst = con.prepareStatement(sql);
                pst.execute();
                DefaultTableModel model = (DefaultTableModel) ShowTable.getModel();
                model.removeRow(ShowTable.getSelectedRow());
                
                int update_value = budget_num+ select_table_total;
                String sql1 = "UPDATE budgettable SET BUDGET='" + update_value + "'  where CODE='" + select_code + "'";
                pst = con.prepareStatement(sql1);
                pst.execute();
               

            } catch (Exception ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void using_comboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_using_comboboxActionPerformed
        s = using_combobox.getSelectedItem().toString();
        
    }//GEN-LAST:event_using_comboboxActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        String Date_one = ((JTextField) first_date.getDateEditor().getUiComponent()).getText();
        String Date_two = ((JTextField) Second_date.getDateEditor().getUiComponent()).getText();
       // String Using = using_combobox.getSelectedItem().toString();
        System.out.println(" Date one "+Date_one+"Date Two= "+Date_two);
       if(Date_one.equals("") && Date_two.equals(""))
       {
           try{
            String sql5 = "SELECT * FROM expenditure_table WHERE procurement_methods = '" + s + "'";
            pst = con.prepareStatement(sql5);
            rs = pst.executeQuery();
            ShowTable.setModel(DbUtils.resultSetToTableModel(rs));
            ShowTable.getColumnModel().getColumn(0).setPreferredWidth(30);
            ShowTable.getColumnModel().getColumn(1).setPreferredWidth(50);
            ShowTable.getColumnModel().getColumn(2).setPreferredWidth(150);
            ShowTable.getColumnModel().getColumn(3).setPreferredWidth(150);
            ShowTable.getColumnModel().getColumn(4).setPreferredWidth(80);
            ShowTable.getColumnModel().getColumn(5).setPreferredWidth(80);
            ShowTable.getColumnModel().getColumn(6).setPreferredWidth(80);
            ShowTable.getColumnModel().getColumn(7).setPreferredWidth(80);
            ShowTable.getColumnModel().getColumn(8).setPreferredWidth(80);
            ShowTable.getColumnModel().getColumn(9).setPreferredWidth(80);
            ShowTable.getColumnModel().getColumn(10).setPreferredWidth(80);

            int RowCount = ShowTable.getRowCount();
            int sum = 0, sum1= 0, sum2= 0,sum3= 0;
            for (int i = 0; i < RowCount; i++) {
                sum = sum + Integer.parseInt(ShowTable.getValueAt(i, 7).toString());
                sum1 = sum1 + Integer.parseInt(ShowTable.getValueAt(i, 8).toString());
                sum2 = sum2 + Integer.parseInt(ShowTable.getValueAt(i, 9).toString());
                sum3 = sum3+ Integer.parseInt(ShowTable.getValueAt(i, 10).toString());

            }
            Total_bill.setText(String.valueOf(sum));
            Total_vat.setText(String.valueOf(sum1));
            Total_it.setText(String.valueOf(sum2));
            Total_purchase.setText(String.valueOf(sum3));
            }
            catch(Exception e) {
                    JOptionPane.showMessageDialog(rootPane, "Database Error");
                }
       }
       else if(s== ""){
            try{
                String sql5 = "SELECT * FROM expenditure_table WHERE Date >= '" + Date_one + "' AND Date <= '" + Date_two + "'";
                pst = con.prepareStatement(sql5);
                rs = pst.executeQuery();
                ShowTable.setModel(DbUtils.resultSetToTableModel(rs));
                ShowTable.getColumnModel().getColumn(0).setPreferredWidth(30);
                ShowTable.getColumnModel().getColumn(1).setPreferredWidth(50);
                ShowTable.getColumnModel().getColumn(2).setPreferredWidth(150);
                ShowTable.getColumnModel().getColumn(3).setPreferredWidth(150);
                ShowTable.getColumnModel().getColumn(4).setPreferredWidth(80);
                ShowTable.getColumnModel().getColumn(5).setPreferredWidth(80);
                ShowTable.getColumnModel().getColumn(6).setPreferredWidth(80);
                ShowTable.getColumnModel().getColumn(7).setPreferredWidth(80);
                ShowTable.getColumnModel().getColumn(8).setPreferredWidth(80);
                ShowTable.getColumnModel().getColumn(9).setPreferredWidth(80);
                ShowTable.getColumnModel().getColumn(10).setPreferredWidth(80);

                int RowCount = ShowTable.getRowCount();
                int sum = 0, sum1= 0, sum2= 0,sum3= 0;
                for (int i = 0; i < RowCount; i++) {
                    sum = sum + Integer.parseInt(ShowTable.getValueAt(i, 7).toString());
                    sum1 = sum1 + Integer.parseInt(ShowTable.getValueAt(i, 8).toString());
                    sum2 = sum2 + Integer.parseInt(ShowTable.getValueAt(i, 9).toString());
                    sum3 = sum3+ Integer.parseInt(ShowTable.getValueAt(i, 10).toString());
                }
                Total_bill.setText(String.valueOf(sum));
                Total_vat.setText(String.valueOf(sum1));
                Total_it.setText(String.valueOf(sum2));
                Total_purchase.setText(String.valueOf(sum3));
        }
       catch(Exception e) {
                    JOptionPane.showMessageDialog(rootPane, "Database Error");
                }
       }
       else if(s != "" && Date_one !="" && Date_two != "")
       {
                  try{
                String sql5 = "SELECT * FROM expenditure_table WHERE Date >= '" + Date_one + "' AND Date <= '" + Date_two + "' AND procurement_methods = '" + s + "'";
                pst = con.prepareStatement(sql5);
                rs = pst.executeQuery();
                ShowTable.setModel(DbUtils.resultSetToTableModel(rs));
                ShowTable.getColumnModel().getColumn(0).setPreferredWidth(30);
                ShowTable.getColumnModel().getColumn(1).setPreferredWidth(50);
                ShowTable.getColumnModel().getColumn(2).setPreferredWidth(150);
                ShowTable.getColumnModel().getColumn(3).setPreferredWidth(150);
                ShowTable.getColumnModel().getColumn(4).setPreferredWidth(80);
                ShowTable.getColumnModel().getColumn(5).setPreferredWidth(80);
                ShowTable.getColumnModel().getColumn(6).setPreferredWidth(80);
                ShowTable.getColumnModel().getColumn(7).setPreferredWidth(80);
                ShowTable.getColumnModel().getColumn(8).setPreferredWidth(80);
                ShowTable.getColumnModel().getColumn(9).setPreferredWidth(80);
                ShowTable.getColumnModel().getColumn(10).setPreferredWidth(80);

                int RowCount = ShowTable.getRowCount();
                int sum = 0, sum1= 0, sum2= 0,sum3= 0;
                for (int i = 0; i < RowCount; i++) {
                    sum = sum + Integer.parseInt(ShowTable.getValueAt(i, 7).toString());
                    sum1 = sum1 + Integer.parseInt(ShowTable.getValueAt(i, 8).toString());
                    sum2 = sum2 + Integer.parseInt(ShowTable.getValueAt(i, 9).toString());
                    sum3 = sum3+ Integer.parseInt(ShowTable.getValueAt(i, 10).toString());
                }
                Total_bill.setText(String.valueOf(sum));
                Total_vat.setText(String.valueOf(sum1));
                Total_it.setText(String.valueOf(sum2));
                Total_purchase.setText(String.valueOf(sum3));
        }
       catch(Exception e) {
                    JOptionPane.showMessageDialog(rootPane, "Database Error");
                }
           
       }
        remaining_budget();
        s="";
        
    }//GEN-LAST:event_SearchActionPerformed

    private void PurchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PurchaseActionPerformed
        String Purchase_date = ((JTextField) Purchase_Date.getDateEditor().getUiComponent()).getText();
        String method = Procurement_method_combo.getSelectedItem().toString();
        String Group_name = Group_combo.getSelectedItem().toString();
        String procurement_pack = procurement_combo.getSelectedItem().toString();
        String Descriptions = Description.getText();
        int bill = Integer.parseInt(Bill.getText());
        int vat = (bill*Integer.parseInt(Vat.getText()))/100;
        int it = (bill*Integer.parseInt(IT.getText()))/100;

        int Total_cost = bill + vat + it;
        
        if( "Office salary".equals(procurement_pack))
             code = 3111101;
        else if( "Employee salary".equals(procurement_pack))
             code = 3111201;
       else if( "Responsibility duty allowance".equals(procurement_pack))
             code = 3111301;
       else if( "Transportation allowance".equals(procurement_pack))
             code = 3111302;
       else if( "Educational allowance".equals(procurement_pack))
            code = 3111306;
       else if( "Hill allowance".equals(procurement_pack))
               code = 3111309;
       else if( "House rent allowance".equals(procurement_pack))
              code = 3111310;
       else if( "Medical allowance".equals(procurement_pack))
              code = 3111311;
       else if( "Tiffin allowance".equals(procurement_pack))
             code = 3111314;
       else if( "Bleaching allowance".equals(procurement_pack))
              code = 3111316;
       else if( "Festival allowance".equals(procurement_pack))
            code = 3111325;
       else if( "Overtime allowance".equals(procurement_pack))
            code = 3111327;
       else if( "Wax entertainment allowance".equals(procurement_pack))
            code = 3111328;
       else if( "Honorarium".equals(procurement_pack))
            code = 3111332;
      else  if( "Bengali new year allowance".equals(procurement_pack))
            code = 3111335;
      else  if( "Other allowance".equals(procurement_pack))
            code = 3111338;
        
          
       else if( "Clear appetite".equals(procurement_pack))
            code = 3211102;
       else if( "Reception expenditure".equals(procurement_pack))
            code = 3211106;
       else if( "Hiring charge".equals(procurement_pack))
            code = 3211107;
       else if( "The cost of the law".equals(procurement_pack))
            code = 3211110;
       else if( "Electricity".equals(procurement_pack))
            code = 3211113;
       else if( "Water".equals(procurement_pack))
            code = 3211115;
       else if( "Internet/Fax/Telex".equals(procurement_pack))
            code = 3211117;
       else if( "Postal".equals(procurement_pack))
            code = 3211119;
       else if( "Telephone".equals(procurement_pack))
            code = 3211120;
       else if( "Promotion and advertising expences".equals(procurement_pack))
            code = 3211125;
       else if( "Books and magazine".equals(procurement_pack))
        code = 3211127;
      
       else if( "Registration fee".equals(procurement_pack))
        code = 3221104;

       else if( "Training".equals(procurement_pack))
        code = 3231301;
    
       else if( "petrol oil and lubricant".equals(procurement_pack))
            code = 3243101;
       else if( "Gas and fuel".equals(procurement_pack))
        code = 3243102;
     
       else if( "Travel expense".equals(procurement_pack))
        code = 3244101;
    
       else if( "Computer accessories".equals(procurement_pack))
            code = 3255101;
       else if( "Other monihari".equals(procurement_pack))
            code = 3255105;
       
       
      else if( "Chemicals".equals(procurement_pack))
                code = 3256102;
       else if( "raw materials and spare parts".equals(procurement_pack))
             code = 3256105;
      else if( "Clothing".equals(procurement_pack))
            code = 3256106;
       else if( "Sports accessories".equals(procurement_pack))
        code = 3256107;
       
       else if( "Honorariam without govt. employee".equals(procurement_pack))
            code = 3257206;
     else if( "Festival".equals(procurement_pack))
        code = 3257301;
       
       else if( "Motor vehicles".equals(procurement_pack))
            code = 3258101;
      else if( "Furniture".equals(procurement_pack))
            code = 3258102;
      else if( "Computer".equals(procurement_pack))
            code = 3258103;
     else if( "office equipment".equals(procurement_pack))
            code = 3258104;
      else if( "Other parts and equipments".equals(procurement_pack))
             code = 3258105;
      else if( "Other building and structure".equals(procurement_pack))
            code = 3258108;
     else if( "Health provision and water supply".equals(procurement_pack))
            code = 3258115;
     else if( "Electrical installation".equals(procurement_pack))
            code= 3258119;
      else if( "Fitting and fixing".equals(procurement_pack))
        code = 3258127;
       
     else if( "Land development tax".equals(procurement_pack))
            code = 3821102;
      else if( "Municipality".equals(procurement_pack))
            code= 3821103;
      else if( "Scholarship".equals(procurement_pack))
        code = 3821117;
      
      else if( "Computer and accessories".equals(procurement_pack))
            code = 4112202;
      else if( "Engineering and other equipment".equals(procurement_pack))
            code = 4112304;
       else if( "Office equipment".equals(procurement_pack))
            code = 4112310;
      else if( "Educational and teaching equipments".equals(procurement_pack))
            code = 4112312;
      else if( "Furniture".equals(procurement_pack))
        code = 4112314;
 
        
         try{

           String sql2 = "select * from budgettable where CODE = '" + code + "' ";
            rs = st.executeQuery(sql2);
            while (rs.next()) {
                
                String bud = rs.getString("BUDGET");
                main_budget = Integer.parseInt(bud);
                System.out.println(" "+main_budget);
            }
           
           }
           catch (Exception e) 
           {
            JOptionPane.showMessageDialog(rootPane, "Database Error");
           }
        
        
        
        
        if (method =="DP" && Total_cost > 25000)
        {
            JOptionPane.showMessageDialog(rootPane, "You can't buy using DP because budget is over 25000");
        }
        else
        {
            if(Total_cost <= main_budget)
            {
                try {
                    
                    String sql100 = "Insert into expenditure_table(CODES, PROCUREMENT_PACKAGES, PROCUREMENT_METHODS, GROUPS, DESCRIPTIONS, DATE, BILL, VAT, IT, Total ) values ('" + code + "','" + procurement_pack + "','" + method + "','" + Group_name + "','" + Descriptions + "','" + Purchase_date + "','" + bill + "','" + vat + "','" + it + "','" + Total_cost + "')";
                    pst = con.prepareStatement(sql100);
                    pst.execute();
                    
                    /*String sql1 = "Insert into purchase(Code, Khat, Method, Upo_Khat, Description, Date, Bill, Vat, IT, Total ) values ('" + code + "','" + procurement_pack + "','" + method + "','" + Group_name + "','" + Descriptions + "','" + Purchase_date + "','" + bill + "','" + vat + "','" + it + "','" + Total_cost + "')";
                    pst = con.prepareStatement(sql1);
                    pst.execute();*/

                    int budget_update = main_budget-Total_cost;
                    String sql2 = "UPDATE budgettable SET BUDGET='" + budget_update + "' WHERE code='" + code + "' ";
                    pst = con.prepareStatement(sql2);
                    pst.execute();
                    
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(rootPane, "Database Error");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, "Insufficient balance to buy");
            }
            
        }
        
  
        //System.out.println(Purchase_date+" "+ method+" "+ Group_name+" "+ procurement_pack+" "+Descriptions+" "+ bill+" "+vat+" "+it+" "+Total_cost+"  "+code);
      remaining_budget();
    }//GEN-LAST:event_PurchaseActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        Login login = new Login();
        login.show();
        this.dispose();
    }//GEN-LAST:event_logoutActionPerformed

    private void ShowTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ShowTableMouseClicked
        try {
            int row = ShowTable.getSelectedRow();
            table_Click = (ShowTable.getModel().getValueAt(row, 7).toString());
            table_Click1 = (ShowTable.getModel().getValueAt(row, 8).toString());
            table_Click2 = (ShowTable.getModel().getValueAt(row, 9).toString());
            table_Click3 = (ShowTable.getModel().getValueAt(row, 10).toString());
           
            table_Click4 = (ShowTable.getModel().getValueAt(row, 1).toString());
            table_Click5 = (ShowTable.getModel().getValueAt(row, 0).toString());
            ID = Integer.parseInt(table_Click5);
            select_code = Integer.parseInt(table_Click4);
            select_table_total= Integer.parseInt(table_Click3);
            Bill.setText(table_Click);
            Vat.setText(table_Click1);
            IT.setText(table_Click2);
            
        } catch (Exception e) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_ShowTableMouseClicked

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        int B = Integer.parseInt(Bill.getText());
        int V = (B*Integer.parseInt(Vat.getText()))/100;
        int I = (B*Integer.parseInt(IT.getText()))/100;
        int T = B+V+I;
        System.out.println("  "+select_table_total + "  "+T );
        int q = JOptionPane.showConfirmDialog(null, "Do you really want to update", "Update", JOptionPane.YES_NO_OPTION);
         if (q == 0) {
            try {
               String sql2 = "select * from budgettable where CODE = '" + select_code + "' ";
                rs = st.executeQuery(sql2);
                while (rs.next()) {
                
                    String bud = rs.getString("BUDGET");
                    main_budget = Integer.parseInt(bud);
                }
                  
                if (select_table_total <= T)
                {
                    int prv_budget = T - select_table_total;
                    int new_budget = main_budget-prv_budget;
                    String sql6 = "UPDATE budgettable SET BUDGET='" + new_budget + "'  WHERE CODE='" + select_code + "'";
                    pst = con.prepareStatement(sql6);
                    pst.execute();
                }
                else if(select_table_total > T)
                { 
                    int num1 = select_table_total- T;
                    int num2 = main_budget + num1;
                    String sql7 = "UPDATE budgettable SET BUDGET='" + num2 + "'  WHERE CODE='" + select_code + "'";
                    pst = con.prepareStatement(sql7);
                    pst.execute();
                
                }
                String sql8 = "UPDATE expenditure_table SET BILL='" + B + "'  ,VAT='" + V + "',IT='" + I + "',Total='" + T + "'  WHERE id='" + ID + "'";
                pst = con.prepareStatement(sql8);
                pst.execute();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Database Error");
            }
        }
    }//GEN-LAST:event_UpdateActionPerformed

    private void non_govt_purActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_non_govt_purActionPerformed
        Non_govt_purchase ngp = new Non_govt_purchase();
        ngp.show();
        this.dispose();
    }//GEN-LAST:event_non_govt_purActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Purchase().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Bill;
    private javax.swing.JButton Delete;
    private javax.swing.JTextField Description;
    private javax.swing.JComboBox Group_combo;
    private javax.swing.JTextField IT;
    private javax.swing.JComboBox Procurement_method_combo;
    private javax.swing.JButton Purchase;
    private com.toedter.calendar.JDateChooser Purchase_Date;
    private javax.swing.JButton Search;
    private com.toedter.calendar.JDateChooser Second_date;
    private javax.swing.JTable ShowTable;
    private javax.swing.JLabel Total_bill;
    private javax.swing.JLabel Total_it;
    private javax.swing.JLabel Total_purchase;
    private javax.swing.JLabel Total_vat;
    private javax.swing.JButton Update;
    private javax.swing.JTextField Vat;
    private com.toedter.calendar.JDateChooser first_date;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logout;
    private javax.swing.JButton non_govt_pur;
    private javax.swing.JComboBox procurement_combo;
    private javax.swing.JLabel remain;
    private javax.swing.JComboBox using_combobox;
    // End of variables declaration//GEN-END:variables
}
